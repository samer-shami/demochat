kind: Service
apiVersion: v1
metadata:
  name: demochat
  namespace: demochat
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  selector:
    app: demochat
  type: NodePort
  sessionAffinity: None
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: demochat
  namespace: demochat
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=uat,Team=test
spec:
  rules:
    - host: demochat.uat.bgl360.com.au
      http:
        paths:
          - backend:
              serviceName: demochat
              servicePort: 80
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: demochat
  namespace: demochat
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demochat
  template:
    metadata:
      labels:
        app: demochat
    spec:
      containers:
        - name: demochat
          image: r.cfcr.io/{{CF_ACCOUNT}}/samer-shami/demochat:master
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      imagePullSecrets:
        - name: codefresh-generated-r.cfcr.io-cfcr-demochat
      restartPolicy: Always
      terminationGracePeriodSeconds: 40
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
